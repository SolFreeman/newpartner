{"version":3,"file":"style.css","sources":["style.scss","sass/_mixins.scss","sass/variables.scss","sass/_general.scss","sass/_fonts.scss","sass/header.scss","sass/media/_media.scss","sass/media/_media_min_width576.scss","sass/media/_media_min_width768.scss","sass/media/_media_min_width1025.scss","sass/media/_media_min_width1200.scss","sass/media/_media_max_width1199.scss","sass/media/_media_max_width1024.scss","sass/media/_media_max_width767.scss","sass/media/_media_max_width575.scss","sass/page/home.scss","sass/page/_about.scss"],"sourcesContent":["/*\nTheme Name: MarkupAssembly\nTheme URI: https://kofelatte.studio/portfolio/\nAuthor: Sol ITech\nAuthor URI: Sol ITech\nDescription:\nVersion: 1.0\nLicense: GNU General Public License v2 or later\nLicense URI: http://www.gnu.org/licenses/gpl-2.0.html\nText Domain: ProjectName\n*/\n\n@import \"sass/mixins\";\n@import \"sass/variables\";\n@import \"sass/general\";\n@import \"sass/fonts\";\n@import \"sass/header\";\n@import \"sass/media/media\";\n@import \"sass/page/home\";\n@import \"sass/page/about\";\n","@charset 'UTF-8';\n\n//     _            _           _                           _ _\n//    (_)          | |         | |                         | (_)\n//     _ _ __   ___| |_   _  __| | ___   _ __ ___   ___  __| |_  __ _\n//    | | '_ \\ / __| | | | |/ _` |/ _ \\ | '_ ` _ \\ / _ \\/ _` | |/ _` |\n//    | | | | | (__| | |_| | (_| |  __/ | | | | | |  __/ (_| | | (_| |\n//    |_|_| |_|\\___|_|\\__,_|\\__,_|\\___| |_| |_| |_|\\___|\\__,_|_|\\__,_|\n//\n//      Simple, elegant and maintainable media queries in Sass\n//                        v1.4.1\n//\n//                http://include-media.com\n//\n//         Authors: Eduardo Boucas (@eduardoboucas)\n//                  Hugo Giraudel (@hugogiraudel)\n//\n//      This project is licensed under the terms of the MIT license\n\n\n////\n/// include-media library public configuration\n/// @author Eduardo Boucas\n/// @access public\n////\n\n\n///\n/// Creates a list of global breakpoints\n///\n/// @example scss - Creates a single breakpoint with the label `phone`\n///  $breakpoints: ('phone': 320px);\n///\n$breakpoints: (\n\t\t'phone': 320px,\n\t\t'tablet': 768px,\n\t\t'desktop': 1024px,\n    'desktop-xl': 1240px,\n    'desktop-xxl': 1480px\n) !default;\n\n\n///\n/// Creates a list of static expressions or media types\n///\n/// @example scss - Creates a single media type (screen)\n///  $media-expressions: ('screen': 'screen');\n///\n/// @example scss - Creates a static expression with logical disjunction (OR operator)\n///  $media-expressions: (\n///    'retina2x': '(-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi)'\n///  );\n///\n$media-expressions: (\n\t\t'screen': 'screen',\n\t\t'print': 'print',\n\t\t'handheld': 'handheld',\n\t\t'landscape': '(orientation: landscape)',\n\t\t'portrait': '(orientation: portrait)',\n\t\t'retina2x': '(-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi)',\n\t\t'retina3x': '(-webkit-min-device-pixel-ratio: 3), (min-resolution: 350dpi)'\n) !default;\n\n\n///\n/// Defines a number to be added or subtracted from each unit when declaring breakpoints with exclusive intervals\n///\n/// @example scss - Interval for pixels is defined as `1` by default\n///  @include media('>128px') {}\n///\n///  /* Generates: */\n///  @media (min-width: 129px) {}\n///\n/// @example scss - Interval for ems is defined as `0.01` by default\n///  @include media('>20em') {}\n///\n///  /* Generates: */\n///  @media (min-width: 20.01em) {}\n///\n/// @example scss - Interval for rems is defined as `0.1` by default, to be used with `font-size: 62.5%;`\n///  @include media('>2.0rem') {}\n///\n///  /* Generates: */\n///  @media (min-width: 2.1rem) {}\n///\n$unit-intervals: (\n\t\t'px': 1,\n\t\t'em': 0.01,\n\t\t'rem': 0.1\n) !default;\n\n///\n/// Defines whether support for media queries is available, useful for creating separate stylesheets\n/// for browsers that don't support media queries.\n///\n/// @example scss - Disables support for media queries\n///  $im-media-support: false;\n///  @include media('>=tablet') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///  /* Generates: */\n///  .foo {\n///    color: tomato;\n///  }\n///\n$im-media-support: true !default;\n\n///\n/// Selects which breakpoint to emulate when support for media queries is disabled. Media queries that start at or\n/// intercept the breakpoint will be displayed, any others will be ignored.\n///\n/// @example scss - This media query will show because it intercepts the static breakpoint\n///  $im-media-support: false;\n///  $im-no-media-breakpoint: 'desktop';\n///  @include media('>=tablet') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///  /* Generates: */\n///  .foo {\n///    color: tomato;\n///  }\n///\n/// @example scss - This media query will NOT show because it does not intercept the desktop breakpoint\n///  $im-media-support: false;\n///  $im-no-media-breakpoint: 'tablet';\n///  @include media('>=desktop') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///  /* No output */\n///\n$im-no-media-breakpoint: 'desktop' !default;\n\n///\n/// Selects which media expressions are allowed in an expression for it to be used when media queries\n/// are not supported.\n///\n/// @example scss - This media query will show because it intercepts the static breakpoint and contains only accepted media expressions\n///  $im-media-support: false;\n///  $im-no-media-breakpoint: 'desktop';\n///  $im-no-media-expressions: ('screen');\n///  @include media('>=tablet', 'screen') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///   /* Generates: */\n///   .foo {\n///     color: tomato;\n///   }\n///\n/// @example scss - This media query will NOT show because it intercepts the static breakpoint but contains a media expression that is not accepted\n///  $im-media-support: false;\n///  $im-no-media-breakpoint: 'desktop';\n///  $im-no-media-expressions: ('screen');\n///  @include media('>=tablet', 'retina2x') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///  /* No output */\n///\n$im-no-media-expressions: ('screen', 'portrait', 'landscape') !default;\n\n////\n/// Cross-engine logging engine\n/// @author Hugo Giraudel\n/// @access private\n////\n\n\n///\n/// Log a message either with `@error` if supported\n/// else with `@warn`, using `feature-exists('at-error')`\n/// to detect support.\n///\n/// @param {String} $message - Message to log\n///\n@function log($message) {\n  @if feature-exists('at-error') {\n\t@error $message;\n  } @else {\n\t@warn $message;\n\t$_: noop();\n  }\n\n  @return $message;\n}\n\n\n///\n/// Wrapper mixin for the log function so it can be used with a more friendly\n/// API than `@if log('..') {}` or `$_: log('..')`. Basically, use the function\n/// within functions because it is not possible to include a mixin in a function\n/// and use the mixin everywhere else because it's much more elegant.\n///\n/// @param {String} $message - Message to log\n///\n@mixin log($message) {\n  @if log($message) {}\n}\n\n\n///\n/// Function with no `@return` called next to `@warn` in Sass 3.3\n/// to trigger a compiling error and stop the process.\n///\n@function noop() {}\n\n///\n/// Determines whether a list of conditions is intercepted by the static breakpoint.\n///\n/// @param {Arglist}   $conditions  - Media query conditions\n///\n/// @return {Boolean} - Returns true if the conditions are intercepted by the static breakpoint\n///\n@function im-intercepts-static-breakpoint($conditions...) {\n  $no-media-breakpoint-value: map-get($breakpoints, $im-no-media-breakpoint);\n\n  @if not $no-media-breakpoint-value {\n\t@if log('`#{$im-no-media-breakpoint}` is not a valid breakpoint.') {}\n  }\n\n  @each $condition in $conditions {\n\t@if not map-has-key($media-expressions, $condition) {\n\t  $operator: get-expression-operator($condition);\n\t  $prefix: get-expression-prefix($operator);\n\t  $value: get-expression-value($condition, $operator);\n\n\t  @if ($prefix == 'max' and $value <= $no-media-breakpoint-value) or\n\t\t\t\t\t($prefix == 'min' and $value > $no-media-breakpoint-value) {\n\t\t@return false;\n\t  }\n\t} @else if not index($im-no-media-expressions, $condition) {\n\t  @return false;\n\t}\n  }\n\n  @return true;\n}\n\n////\n/// Parsing engine\n/// @author Hugo Giraudel\n/// @access private\n////\n\n\n///\n/// Get operator of an expression\n///\n/// @param {String} $expression - Expression to extract operator from\n///\n/// @return {String} - Any of `>=`, `>`, `<=`, `<`, `≥`, `≤`\n///\n@function get-expression-operator($expression) {\n  @each $operator in ('>=', '>', '<=', '<', '≥', '≤') {\n\t@if str-index($expression, $operator) {\n\t  @return $operator;\n\t}\n  }\n\n  // It is not possible to include a mixin inside a function, so we have to\n  // rely on the `log(..)` function rather than the `log(..)` mixin. Because\n  // functions cannot be called anywhere in Sass, we need to hack the call in\n  // a dummy variable, such as `$_`. If anybody ever raise a scoping issue with\n  // Sass 3.3, change this line in `@if log(..) {}` instead.\n  $_: log('No operator found in `#{$expression}`.');\n}\n\n\n///\n/// Get dimension of an expression, based on a found operator\n///\n/// @param {String} $expression - Expression to extract dimension from\n/// @param {String} $operator - Operator from `$expression`\n///\n/// @return {String} - `width` or `height` (or potentially anything else)\n///\n@function get-expression-dimension($expression, $operator) {\n  $operator-index: str-index($expression, $operator);\n  $parsed-dimension: str-slice($expression, 0, $operator-index - 1);\n  $dimension: 'width';\n\n  @if str-length($parsed-dimension) > 0 {\n\t$dimension: $parsed-dimension;\n  }\n\n  @return $dimension;\n}\n\n\n///\n/// Get dimension prefix based on an operator\n///\n/// @param {String} $operator - Operator\n///\n/// @return {String} - `min` or `max`\n///\n@function get-expression-prefix($operator) {\n  @return if(index(('<', '<=', '≤'), $operator), 'max', 'min');\n}\n\n\n///\n/// Get value of an expression, based on a found operator\n///\n/// @param {String} $expression - Expression to extract value from\n/// @param {String} $operator - Operator from `$expression`\n///\n/// @return {Number} - A numeric value\n///\n@function get-expression-value($expression, $operator) {\n  $operator-index: str-index($expression, $operator);\n  $value: str-slice($expression, $operator-index + str-length($operator));\n\n  @if map-has-key($breakpoints, $value) {\n\t$value: map-get($breakpoints, $value);\n  } @else {\n\t$value: to-number($value);\n  }\n\n  $interval: map-get($unit-intervals, unit($value));\n\n  @if not $interval {\n\t// It is not possible to include a mixin inside a function, so we have to\n\t// rely on the `log(..)` function rather than the `log(..)` mixin. Because\n\t// functions cannot be called anywhere in Sass, we need to hack the call in\n\t// a dummy variable, such as `$_`. If anybody ever raise a scoping issue with\n\t// Sass 3.3, change this line in `@if log(..) {}` instead.\n\t//$_: log('Unknown unit `#{unit($value)}`.');\n  }\n\n  @if $operator == '>' {\n\t$value: $value + $interval;\n  } @else if $operator == '<' {\n\t$value: $value - $interval;\n  }\n\n  @return $value;\n}\n\n\n///\n/// Parse an expression to return a valid media-query expression\n///\n/// @param {String} $expression - Expression to parse\n///\n/// @return {String} - Valid media query\n///\n@function parse-expression($expression) {\n  // If it is part of $media-expressions, it has no operator\n  // then there is no need to go any further, just return the value\n  @if map-has-key($media-expressions, $expression) {\n\t@return map-get($media-expressions, $expression);\n  }\n\n  $operator: get-expression-operator($expression);\n  $dimension: get-expression-dimension($expression, $operator);\n  $prefix: get-expression-prefix($operator);\n  $value: get-expression-value($expression, $operator);\n\n  @return '(#{$prefix}-#{$dimension}: #{$value})';\n}\n\n///\n/// Slice `$list` between `$start` and `$end` indexes\n///\n/// @access private\n///\n/// @param {List} $list - List to slice\n/// @param {Number} $start [1] - Start index\n/// @param {Number} $end [length($list)] - End index\n///\n/// @return {List} Sliced list\n///\n@function slice($list, $start: 1, $end: length($list)) {\n  @if length($list) < 1 or $start > $end {\n\t@return ();\n  }\n\n  $result: ();\n\n  @for $i from $start through $end {\n\t$result: append($result, nth($list, $i));\n  }\n\n  @return $result;\n}\n\n////\n/// String to number converter\n/// @author Hugo Giraudel\n/// @access private\n////\n\n\n///\n/// Casts a string into a number\n///\n/// @param {String | Number} $value - Value to be parsed\n///\n/// @return {Number}\n///\n@function to-number($value) {\n  @if type-of($value) == 'number' {\n\t@return $value;\n  } @else if type-of($value) != 'string' {\n\t$_: log('Value for `to-number` should be a number or a string.');\n  }\n\n  $result: 0;\n  $digits: 0;\n  $minus: str-slice($value, 1, 1) == '-';\n  $numbers: ('0': 0, '1': 1, '2': 2, '3': 3, '4': 4, '5': 5, '6': 6, '7': 7, '8': 8, '9': 9);\n\n  @for $i from if($minus, 2, 1) through str-length($value) {\n\t$character: str-slice($value, $i, $i);\n\n\t@if not (index(map-keys($numbers), $character) or $character == '.') {\n\t  @return to-length(if($minus, -$result, $result), str-slice($value, $i))\n\t}\n\n\t@if $character == '.' {\n\t  $digits: 1;\n\t} @else if $digits == 0 {\n\t  $result: $result * 10 + map-get($numbers, $character);\n\t} @else {\n\t  $digits: $digits * 10;\n\t  $result: $result + map-get($numbers, $character) / $digits;\n\t}\n  }\n\n  @return if($minus, -$result, $result);;\n}\n\n\n///\n/// Add `$unit` to `$value`\n///\n/// @param {Number} $value - Value to add unit to\n/// @param {String} $unit - String representation of the unit\n///\n/// @return {Number} - `$value` expressed in `$unit`\n///\n@function to-length($value, $unit) {\n  $units: ('px': 1px, 'cm': 1cm, 'mm': 1mm, '%': 1%, 'ch': 1ch, 'pc': 1pc, 'in': 1in, 'em': 1em, 'rem': 1rem, 'pt': 1pt, 'ex': 1ex, 'vw': 1vw, 'vh': 1vh, 'vmin': 1vmin, 'vmax': 1vmax);\n\n  @if not index(map-keys($units), $unit) {\n\t$_: log('Invalid unit `#{$unit}`.');\n  }\n\n  @return $value * map-get($units, $unit);\n}\n\n///\n/// This mixin aims at redefining the configuration just for the scope of\n/// the call. It is helpful when having a component needing an extended\n/// configuration such as custom breakpoints (referred to as tweakpoints)\n/// for instance.\n///\n/// @author Hugo Giraudel\n///\n/// @param {Map} $tweakpoints [()] - Map of tweakpoints to be merged with `$breakpoints`\n/// @param {Map} $tweak-media-expressions [()] - Map of tweaked media expressions to be merged with `$media-expression`\n///\n/// @example scss - Extend the global breakpoints with a tweakpoint\n///  @include media-context(('custom': 678px)) {\n///    .foo {\n///      @include media('>phone', '<=custom') {\n///       // ...\n///      }\n///    }\n///  }\n///\n/// @example scss - Extend the global media expressions with a custom one\n///  @include media-context($tweak-media-expressions: ('all': 'all')) {\n///    .foo {\n///      @include media('all', '>phone') {\n///       // ...\n///      }\n///    }\n///  }\n///\n/// @example scss - Extend both configuration maps\n///  @include media-context(('custom': 678px), ('all': 'all')) {\n///    .foo {\n///      @include media('all', '>phone', '<=custom') {\n///       // ...\n///      }\n///    }\n///  }\n///\n@mixin media-context($tweakpoints: (), $tweak-media-expressions: ()) {\n  // Save global configuration\n  $global-breakpoints: $breakpoints;\n  $global-media-expressions: $media-expressions;\n\n  // Update global configuration\n  $breakpoints: map-merge($breakpoints, $tweakpoints) !global;\n  $media-expressions: map-merge($media-expressions, $tweak-media-expressions) !global;\n\n  @content;\n\n  // Restore global configuration\n  $breakpoints: $global-breakpoints !global;\n  $media-expressions: $tweak-media-expressions !global;\n}\n\n////\n/// include-media public exposed API\n/// @author Eduardo Boucas\n/// @access public\n////\n\n\n///\n/// Generates a media query based on a list of conditions\n///\n/// @param {Arglist}   $conditions  - Media query conditions\n///\n/// @example scss - With a single set breakpoint\n///  @include media('>phone') { }\n///\n/// @example scss - With two set breakpoints\n///  @include media('>phone', '<=tablet') { }\n///\n/// @example scss - With custom values\n///  @include media('>=358px', '<850px') { }\n///\n/// @example scss - With set breakpoints with custom values\n///  @include media('>desktop', '<=1350px') { }\n///\n/// @example scss - With a static expression\n///  @include media('retina2x') { }\n///\n/// @example scss - Mixing everything\n///  @include media('>=350px', '<tablet', 'retina3x') { }\n///\n@mixin media($conditions...) {\n  @if ($im-media-support and length($conditions) == 0) or\n\t\t\t(not $im-media-support and im-intercepts-static-breakpoint($conditions...)) {\n\t@content;\n  } @else if ($im-media-support and length($conditions) > 0) {\n\t@media #{unquote(parse-expression(nth($conditions, 1)))} {\n\t  // Recursive call\n\t  @include media(slice($conditions, 2)...) {\n\t  @content;\n\t}\n\t}\n  }\n}\n","///fonts///\n$font-primary: \"Gilroy\";\n$font-size: 24px;\n$section-title: 32px;\n$line-height: 1.5;\n$color: #FCF2FE;\n$font-weight: 500;\n\n///colors///\n$white: #fff;\n$black: #000;\n\n$primary-color: #F122D3;\n\n\n\n$required: $primary-color;\n$placeholder: #bdbdbd;\n\n\n","input {\n\tfont-family: $font-primary;\n\n\t&::placeholder {\n\t\tfont-family: $font-primary;\n\t}\n}\n\nbody {\n\tcolor: $color;\n\tfont-size: 16px;\n\tline-height: $line-height;\n\tfont-family: $font-primary;\n\tbackground-color: #fff;\n\tdisplay: flex;\n\tflex-direction: column;\n\tmin-height: 100vh;\n\tpadding: 0;\n\tmargin: 0;\n\toverflow-x: hidden;\n\n\t@include media('>tablet') {\n\t\tfont-size: $font-size;\n\t}\n}\n\n*,\n*:before,\n*:after {\n\tbox-sizing: border-box;\n}\n\n/*2*/\n::selection {\n\tcolor: #000;\n\tbackground: $primary-color;\n}\n\np {\n\tmargin: 0 0 8px;\n}\n\na {\n\tcolor: $primary-color;\n\n\t&:hover {\n\t\tcolor: $primary-color;\n\t}\n}\n\ni,\nem {\n\tfont-weight: 400;\n}\n\nimg {\n\tmax-width: 100%;\n\tdisplay: block;\n}\n\n/*3*/\n\nol,\nul {\n\tpadding: 0;\n\tmargin: 0;\n\tcounter-reset: li;\n\n\tli {\n\t\tlist-style: none;\n\t\tlist-style-position: outside;\n\t\tposition: relative;\n\t\tpadding-left: 30px;\n\n\t\t&:before {\n\t\t\tcontent: counter(li, decimal) \".\";\n\t\t\tcounter-increment: li;\n\t\t\tmargin-left: 0;\n\t\t\tmargin-right: 0;\n\t\t\tfont-weight: 700;\n\t\t\tcolor: $color;\n\t\t\tposition: absolute;\n\t\t\ttop: 0;\n\t\t\tleft: 0\n\t\t}\n\t}\n}\n\n/*4*/\n\nul {\n\tli {\n\t\t&::before {\n\t\t\tcontent: \"\";\n\t\t\tbackground-color: $primary-color;\n\t\t\tborder-radius: 50%;\n\t\t\twidth: 10px;\n\t\t\tmin-width: 10px;\n\t\t\theight: 10px;\n\t\t\ttop: 7px;\n\t\t}\n\t}\n}\n\n\n/*7-8*/\nh1,\nh2,\nh3,\nh4,\nh5,\nh6,\n.title_1,\n.title_2,\n.title_3,\n.title_4,\n.title_5,\n.title_6 {\n\tline-height: 1;\n\tcolor: $white;\n\tfont-weight: 800;\n\tfont-family: $font-primary;\n\tmargin: 0 0 8px;\n}\n\nh1,\n.title_1 {\n\tfont-size: 50px;\n\tmargin: 0 0 20px;\n\n\t@include media('>tablet') {\n\t\tfont-size: 64px;\n\t\tmargin: 0 0 45px;\n\t}\n}\n\nh2,\n.title_2 {\n\tfont-size: 24px;\n}\n\nh3,\n.title_3 {\n\tfont-size: 20px;\n}\n\nh4,\n.title_4 {\n\tfont-size: 18px;\n}\n\nh5,\n.title_5 {\n\tfont-size: 16px;\n}\n\nh6,\n.title_6 {\n\tfont-size: 14px;\n}\n\n\n/*10-11*/\n\n\n\n.btn {\n\tdisplay: inline-flex;\n\tjustify-content: center;\n\talign-items: center;\n\tcursor: pointer;\n\tpadding: 17px 35.5px;\n\n\tfont-weight: 700;\n\tfont-size: 18px;\n\tfont-family: $font-primary;\n\ttext-decoration: none;\n\n\tborder: 1px solid rgba(255,255,255,.06);\n\tline-height: 1.1;\n\n\tbackground: linear-gradient(214.25deg, rgba(0, 0, 0, 0.224) 6.73%, rgba(0, 0, 0, 0.084) 100.28%);\n\n\tborder-radius: 90px;\n\t// text-shadow: 0px 20.14px 241.69px #13EBD6;\n\n\ttext-shadow: 0px -2.25px 50.57px rgba(19, 235, 214, .75);\n\n\ttransition: color .15s ease-in-out, background-color .15s ease-in-out, border-color .15s ease-in-out, box-shadow .15s ease-in-out;\n\n\tanimation: pulse 2s infinite cubic-bezier(0.6, 0, 0, 1);\n\tbox-shadow: 0 0 rgba(241, 34, 211, .3);\n\n\t&:disabled {\n\t\tpointer-events: none;\n\t\topacity: 0.3;\n\t}\n\n\t&:hover {\n\t\tbackground-color: $primary-color;\n\t\tcolor: #fff;\n\t\tborder-color: $primary-color;\n\t}\n\n\t@include media('>tablet') {\n\t\tfont-size: 32px;\n\t\tpadding: 30px 45px;\n\t\tfont-weight: 800;\n\t}\n}\n\n@keyframes pulse {\n\t100% {\n\t\tbox-shadow: 0 0 0 22px rgba(241, 34, 211, 0);\n\t}\n}\n\n\n\n.btn-primary {\n\tcolor: $white;\n\tbackground: $primary-color;\n\n\t&:hover {\n\t\tcolor: $primary-color;\n\t\tbackground-color: transparent;\n\t\tborder-color: $primary-color;\n\t}\n}\n\n\n.btn-link {\n\tcolor: #212121;\n\tbackground-color: #fff;\n\n\t&:hover {\n\t\tcolor: #fff;\n\t\tbackground-color: $primary-color;\n\t}\n}\n\n/*12*/\n/*13*/\n.scroll-x {\n\toverflow: auto;\n}\n\n.scroll-x::-webkit-scrollbar-thumb {\n\tbackground-color: $primary-color;\n\tborder-radius: 5px;\n}\n\n.scroll-x::-webkit-scrollbar {\n\theight: 1px;\n\tbackground-color: #DFDCDC;\n\tborder: 0 solid #DFDCDC;\n\tborder-radius: 5px;\n}\n\n.scroll::-webkit-scrollbar {\n\twidth: 3px;\n\tborder-radius: 5px;\n}\n\n.scroll::-webkit-scrollbar-thumb {\n\tbackground-color: $primary-color;\n\tbackground-clip: padding-box;\n\tborder: 0 solid #DFDCDC;\n\tborder-radius: 5px;\n\n\t&:hover {\n\t\tbackground-color: $primary-color;\n\t\tcursor: pointer;\n\t}\n}\n\n.scroll::-webkit-scrollbar-track {\n\tborder-radius: 5px;\n\tbackground-color: #DFDCDC;\n\tcursor: pointer;\n}\n\n::-webkit-scrollbar-button {\n\tbackground-color: transparent;\n\tdisplay: none;\n}\n\n/* IE */\n.scroll {\n\tscrollbar-face-color: $primary-color;\n\tscrollbar-shadow-color: #DFDCDC;\n\tscrollbar-highlight-color: #DFDCDC;\n}\n\n/* FireFox */\n.scroll {\n\tscrollbar-color: $primary-color #DFDCDC;\n\tpadding-right: 15px\n}\n\n.scroll {\n\toverflow-x: hidden;\n\n\t&_x {\n\t\toverflow-x: scroll;\n\t\toverflow-y: hidden;\n\t\tpadding-right: 0;\n\t\tpadding-bottom: 40px;\n\n\t\t@include media('>1280px') {\n\t\t\toverflow-x: hidden;\n\t\t}\n\n\t\t&::-webkit-scrollbar {\n\t\t\theight: 2px;\n\t\t\tmax-width: 300px;\n\t\t}\n\t}\n}\n\n\n.scroll-heidden::-webkit-scrollbar {\n\twidth: 0px;\n}\n\n/*14*/\n/*15*/\n/*16*/\n/*17*/\n/*18*/\n\n\n.container {\n\twidth: 100%;\n\tpadding: 0 20px;\n\tmax-width: 1540px;\n\tmargin: 0 auto;\n\n\t&_xm {\n\t\tmax-width: 1240px;\n\t}\n\n\t&_sm {\n\t\tmax-width: 1340px;\n\t}\n\n\t&_xl {\n\t\tmax-width: 1645px;\n\t}\n\n\t&_lg {\n\t\tmax-width: 1640px;\n\t}\n\n\t&_df {\n\t\tdisplay: flex;\n\t\tjustify-content: space-between;\n\t\tflex-wrap: wrap;\n\t}\n}\n\n.wrapper {\n\toverflow: hidden;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    min-height: 100%;\n\tflex: auto;\n    overflow-y: auto;\n\tbackground-image: url('./assets/img/bg_mobile@2x.jpg');\n\tbackground-size: cover;\n\tbackground-repeat: no-repeat;\n\tbackground-position: 50% 0;\n\n\t@include media('>tablet') {\n\t\tbackground-image: url('./assets/img/bg@2x.jpg');\n\t}\n}\n\n.btn-holder {\n\ttext-align: center;\n}\n","/* === BEGIN FONTS === */\n@font-face {\n    font-family: 'Gilroy';\n    src: url('./assets/fonts/Gilroy-Bold.ttf') format('truetype');\n    font-weight: 700;\n    font-style: normal;\n    font-display: swap;\n}\n\n@font-face {\n    font-family: 'Gilroy';\n    src: url('./assets/fonts/Gilroy-Extrabold.ttf') format('truetype');\n    font-weight: 800;\n    font-style: normal;\n    font-display: swap;\n}\n\n/* === END FONTS === */\n",".header {\n\tpadding: 41px 16px 0;\n}\n\n.logo-holder {\n\tmax-width: 140px;\n\tmargin: 0 auto;\n\n\t@include media('>tablet') {\n\t\tmax-width: 200px;\n\t}\n}\n","/* === BEGIN MEDIA === */\n\n/* ======================\n$mobile-small 240px\n$mobile-large 320px\n$tablet-small 480px\n$tablet-large 768px\n$screen-small 1024px\n$screen-large 1280px \n====================== */\n\n@import \"media_min_width576\";\n@import \"media_min_width768\";\n@import \"media_min_width1025\";\n@import \"media_min_width1200\";\n\n@import \"media_max_width1199\";\n@import \"media_max_width1024\";\n@import \"media_max_width767\";\n@import \"media_max_width575\";\n\n/* === END MEDIA === */","@media screen and (min-width: 576px) {\n}","@media screen and (min-width: 768px) {\n\n}\n","@media (min-width: 1025px) {\n\n}\n","@media (min-width: 1200px) {\n\n}","@media screen and (max-width: 1199px) {\n}\n","@media screen and (max-width: 1024px) {\n    \nh1,\n.title_1 {\n    font-size: 24px;\n}\n\nh2,\n.title_2 {\n    font-size:20px;\n}\n\nh3,\n.title_3 {\n    font-size: 18px;\n}\n\nh4,\n.title_4 {\n    font-size: 16px;\n}\n\nh5,\n.title_5 {\n    font-size: 14px;\n}\n\nh6,\n.title_6 {\n    font-size: 12px;\n}\n}\n\n\n","@media screen and (max-width: 767px) {\n    .breadcrumb {\n        padding: 25px 15px 15px 0;\n    }\n}\n","@media screen and (max-width: 575px) {\n    \n}\n",".main {\n\tpadding: 30px 16px;\n\tflex: 1;\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-items: center;\n\tjustify-content: center;\n\n\t@include media('>tablet') {\n\t\tpadding: 45px 16px;\n\t}\n}\n\n.subtext  {\n\ttext-align: center;\n\tline-height: 1.3;\n\n\tp {\n\t\tmargin: 0 0 15px;\n\n\t\t&:nth-of-type(2) {\n\t\t\tmax-width: 532px;\n\t\t\tmargin: 0 auto 30px;\n\t\t}\n\t}\n\n\t@include media('>tablet') {\n\t\tp {\n\t\t\tmargin: 0 0 30px;\n\t\t}\n\t}\n}\n\n.help-list {\n\tdisplay: flex;\n\tjustify-content: space-between;\n\tgap: 15px;\n\twidth: 100%;\n\tmargin: 0 0 30px;\n\tflex-wrap: wrap;\n\n\t.list-item {\n\t\ttext-align: center;\n\t\tpadding: 20px 10px;\n\t\twidth: calc(50% - 8px);\n\t\tborder-radius: 8px;\n\t\tborder: 1px solid rgba(255,255,255,.1);\n\t\tbackdrop-filter: blur(16.908313751220703px);\n\t\tbox-shadow: 0px 3.62px 4.83px 0px #00000029;\n\t}\n\n\t.list-item img {\n\t\tmax-width: 50px;\n\t\twidth: 100%;\n\t\tmargin: 0 auto 15px;\n\t\tbox-shadow: 0 16px 76px 0 rgba(0, 0, 0, .16);\n\t}\n\n\t.title {\n\t\tfont-size: 16px;\n\t\tdisplay: block;\n\t\tfont-weight: 700;\n\t}\n\n\n\t@include media('>1024px') {\n\t\tjustify-content: center;\n\t\tgap: 75px;\n\t\tmargin: 0 0 45px;\n\t\tflex-wrap: nowrap;\n\n\t\t.list-item {\n\t\t\tmax-width: 280px;\n\t\t}\n\t}\n\n\t@include media('>tablet') {\n\t\t.list-item {\n\t\t\tpadding: 38px 10px;\n\n\t\t\timg {\n\t\t\t\tmax-width: 100px;\n\t\t\t\tmargin: 0 auto 27px;\n\t\t\t}\n\t\t}\n\n\t\t.title {\n\t\t\tfont-size: 20px;\n\t\t}\n\t}\n\n\t& + .subtext {\n\t\tmax-width: 794px;\n\t}\n}\n\n\n\n",""],"names":[],"mappings":"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"}